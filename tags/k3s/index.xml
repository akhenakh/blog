<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>K3s on Fabrice Aneche</title><link>https://blog.nobugware.com/tags/k3s/</link><description>Recent content in K3s on Fabrice Aneche</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 18 Dec 2019 18:00:00 +0000</lastBuildDate><atom:link href="https://blog.nobugware.com/tags/k3s/index.xml" rel="self" type="application/rss+xml"/><item><title>k3s, containerd &amp; ZFS</title><link>https://blog.nobugware.com/post/2019/k3s-containterd-zfs/</link><pubDate>Wed, 18 Dec 2019 18:00:00 +0000</pubDate><guid>https://blog.nobugware.com/post/2019/k3s-containterd-zfs/</guid><description>To simplify distribution k3s does not ship with zfs support.
But can work with by relying on an existing containerd enabled zfs, here is how:
Requierements Install cni-plugins and crictl
Ensure your containerd includes the zfs plugins:
ctr plugins ls ... io.containerd.snapshotter.v1 zfs linux/amd64 ok Configuration Create the default containerd config file
mkdir -p /etc/containerd/ containerd config default &amp;gt; /etc/containerd/config.toml Change the snapshotter to &amp;quot;zfs&amp;quot;
[plugins.&amp;quot;io.containerd.grpc.v1.cri&amp;quot;.containerd] snapshotter = &amp;quot;zfs&amp;quot; And in my special Arch case also change the path to the cni binaries:</description></item><item><title>k3s on arm64</title><link>https://blog.nobugware.com/post/2019/k3s-on-arm64/</link><pubDate>Wed, 19 Jun 2019 06:00:00 -0400</pubDate><guid>https://blog.nobugware.com/post/2019/k3s-on-arm64/</guid><description>I&amp;rsquo;m evaluating k3s a Lightweight Kubernetes on a 3 nodes arm64 cluster (RK3328 Quad arm64).
At the time of writing the stable release is k3s v0.6.1.
Here are my notes:
If you haven&amp;rsquo;t installed k3s with the install.sh, you may need to load some modules: br_netfilter and overlay
Docker is not needed since k3s is using containerd but it seems I had to start docker to initialized the whole cgroups, at least on Arch</description></item></channel></rss>