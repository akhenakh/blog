<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c&#43;&#43; on Fabrice Aneche</title>
    <link>https://blog.nobugware.com/tags/c&#43;&#43;/</link>
    <description>Recent content in c&#43;&#43; on Fabrice Aneche</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Apr 2020 04:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.nobugware.com/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43; bindings in Go and Swig</title>
      <link>https://blog.nobugware.com/post/2020/c-bindings-in-go-and-swig/</link>
      <pubDate>Sat, 11 Apr 2020 04:00:00 +0000</pubDate>
      
      <guid>https://blog.nobugware.com/post/2020/c-bindings-in-go-and-swig/</guid>
      <description>Swig is a tool to generate bindings for c/c++, it can produce bindings for Python, Java, Go and more.
Unfortunately the swig for Go is very limited, so as the Swig &amp;amp; Go documentation.
Here are some notes taken while writing a binding from c++ to Go:
To tranform standard types to Golang Let&amp;rsquo;s look at this c++ function:
int64_t Ticks() const;  Simply import sdtint into swig
%include &amp;quot;stdint.</description>
    </item>
    
  </channel>
</rss>