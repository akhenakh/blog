<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Fabrice Aneche</title><link>https://blog.nobugware.com/tags/python/</link><description>Recent content in Python on Fabrice Aneche</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 18 Jan 2018 08:20:15 -0500</lastBuildDate><atom:link href="https://blog.nobugware.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Google S2 with Python &amp; Jupyter</title><link>https://blog.nobugware.com/post/2018/google-s2-python-jupyter/</link><pubDate>Thu, 18 Jan 2018 08:20:15 -0500</pubDate><guid>https://blog.nobugware.com/post/2018/google-s2-python-jupyter/</guid><description>Google is working again on S2 a spatial library !!!
And they even have created a website to communicate about it s2geometry.
The C++ port contains a Python Swig interface.
I&amp;rsquo;ve been using an unofficial Python port with Jupyter for years now things are way more simpler.
If you are on Arch I&amp;rsquo;ve create a package, simply install AUR s2geometry-git
First we want a clean Jupyter install from scratch:
virtualenv3 ~/dev/venv3 source ~/dev/venv3/bin/activate pip install jupyter pip install cython pip install numpy pip install matplotlib scikit-learn scipy Shapely folium geojson Cartopy cp /usr/lib/python3.</description></item><item><title>Remove keys from a list of dicts in Python</title><link>https://blog.nobugware.com/post/2013/02/19/remove-keys-from-a-list-of-dicts-in-python/</link><pubDate>Tue, 19 Feb 2013 16:53:12 -0400</pubDate><guid>https://blog.nobugware.com/post/2013/02/19/remove-keys-from-a-list-of-dicts-in-python/</guid><description>I often have this need to remove some keys from a list of dict, like cleaning it before passing it.
Comment on Gist</description></item><item><title>My developer tools (Mobile)</title><link>https://blog.nobugware.com/post/2013/02/14/my-developer-tools/</link><pubDate>Thu, 14 Feb 2013 19:20:35 -0400</pubDate><guid>https://blog.nobugware.com/post/2013/02/14/my-developer-tools/</guid><description>As a day to day Python and iOS developer, I&amp;rsquo;m using a lot of tools on my Mac, here is a list that could help you too.
Textmate 2, Free, it&amp;rsquo;s funny to see that most people don&amp;rsquo;t know Textmate 2 is open source and totally free, this is a wonderful editor with completion and support for most languages.
SublimeText 2, free/pay, I&amp;rsquo;ve switched to Sublime mostly for the Golang support with Gosublime and not regreting it.</description></item><item><title>This blog is now running on Google App Engine</title><link>https://blog.nobugware.com/post/2013/02/12/this-blog-is-now-running-on-google-app-engine/</link><pubDate>Tue, 12 Feb 2013 20:59:31 -0400</pubDate><guid>https://blog.nobugware.com/post/2013/02/12/this-blog-is-now-running-on-google-app-engine/</guid><description>After 6 years of existence, where this blog was self hosted, it&amp;rsquo;s now running on Google App Engine with webapp2 Python framework.
It was previously a Django application, but no code has been reused, it&amp;rsquo;s a total rewrite (approx 5 hours).
The Google App Engine ecosystem is very good, all the tools are efficient and except a middle quality documentation, it was a pleasure to rewrite and transfer this blog.</description></item><item><title>Python Requests hooks</title><link>https://blog.nobugware.com/post/2012/03/29/python-requests-hooks/</link><pubDate>Thu, 29 Mar 2012 08:23:50 -0400</pubDate><guid>https://blog.nobugware.com/post/2012/03/29/python-requests-hooks/</guid><description>Python requests is the de facto HTTP package for Python, nice API, wonderful documentation.
I had the need to sign my requests and to change the header after the request was built, [here is hooks](http://docs.python- requests.org/en/v0.10.7/user/advanced/#event-hooks), simply call a function pre_request and your are done:
def auth_sign(req): user_id = &amp;#39;4f47a5f21aebcedff3001234&amp;#39; secret_key = &amp;#39;C21LHQ5R4RVO2U2UMTEZ&amp;#39; timestamp = str(int(time.mktime(time.gmtime()))) string_to_sign = req.method + &amp;#39;\n&amp;#39; + user_id + &amp;#39;\n&amp;#39; + timestamp + &amp;#39;\n&amp;#39; + req.</description></item><item><title>compile gevent on OSX or FreeBSD with pip</title><link>https://blog.nobugware.com/post/2011/11/15/compile-gevent-osx-or-freebsd-pip/</link><pubDate>Tue, 15 Nov 2011 11:53:46 -0400</pubDate><guid>https://blog.nobugware.com/post/2011/11/15/compile-gevent-osx-or-freebsd-pip/</guid><description>It&amp;rsquo;s more a reminder to myself, gevent depends on libevent2 but the setup.py doesn&amp;rsquo;t correcty look for it, a simple solution:
export CFLAGS=-I/usr/local/include export LDFLAGS=-L/usr/local/lib pip install gevent change it for /opt/local/&amp;hellip; if you are on OSX or you will get a bunch of errors
/Developer/usr/bin/llvm-gcc-4.2 -fno-strict-aliasing -fno-common -dynamic -pipe -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I/opt/local/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c gevent/core.c -o build/temp.macosx-10.7-x86_64-2.7/gevent/core.o In file included from gevent/core.c:225: gevent/libevent.h:9:19: error: event.h: No such file or directory gevent/libevent.</description></item><item><title>Enhance your Python</title><link>https://blog.nobugware.com/post/2011/08/16/enhance-your-python/</link><pubDate>Tue, 16 Aug 2011 12:00:59 -0400</pubDate><guid>https://blog.nobugware.com/post/2011/08/16/enhance-your-python/</guid><description>Nohting new here but a list of what you should read to be a better Python developer, for intermediate and advanced Pythoners, in no particular order.
Building skills in Python a very complete language description Code like a Pythonista useful quick list of good practice. I&amp;rsquo;m reading it again and again to get it automatically The hidden features of Python question on Stackoverflow, a must read What is a metaclass Generator Tricks for Systems Programmers, A curious Course Coroutines and Concurrency and the Python yield keyword explained on Stackoverflow, all about yield Advanced Python: (or understanding Python) Video from Google Understanding Python decorators, then use it with Python Decorator Library Python progression path - From apprentice to guru, good advises to mastering Python PEP8 reading, and pylint usage Dive into Python 3 somes parts are boring but somes are greats Idioms and Anti-Idioms in Python, Python best practices Python Attributes and Methods The Hitchhiker&amp;rsquo;s Guide to Python A special mention for the Tornado web framework, the lack of documentation makes reading the source code a lot and it&amp;rsquo;s very didactic, Understanding the code inside Tornado is a very great blog post about asynchronous programming, the Python asyncore module and [An Introduction to Asynchronous Programming](http://krondo.</description></item><item><title>JMX query in Python (CPython)</title><link>https://blog.nobugware.com/post/2010/11/08/jmx-query-python-cpython/</link><pubDate>Mon, 08 Nov 2010 17:30:03 -0400</pubDate><guid>https://blog.nobugware.com/post/2010/11/08/jmx-query-python-cpython/</guid><description>JMX had good intentions but the API is only implemented in Java, a Java product for Java, with no access to the outside world.
Jython was one of the solution but many times I had needed to call JMX from a CPython.
Jpype solved this problem and works extremely well.
Just install Jpype then try something like this:
The execution is really really fast, faster than a jvm run ?? and memory usage is really really slow !</description></item><item><title>Python 2.6 in Gentoo stable</title><link>https://blog.nobugware.com/post/2009/07/31/python-26-gentoo-stable/</link><pubDate>Fri, 31 Jul 2009 10:37:34 -0400</pubDate><guid>https://blog.nobugware.com/post/2009/07/31/python-26-gentoo-stable/</guid><description>It was so long but python 2.6 is now in Gentoo stable, here is how to upgrade.
First emerge &amp;ndash;sync your ports tree (as of 31st July 2009).
Then update your ports _emerge -upvD world _remove -p when ready.
When emerging python-2.6.2 it will become the main python, as you can see with eselect python list.
So you only have to rebuild every ports that rely on python, simple ? Yes with python-update</description></item><item><title>Python 3.0 is out</title><link>https://blog.nobugware.com/post/2008/12/04/python-30-out/</link><pubDate>Thu, 04 Dec 2008 10:08:35 -0400</pubDate><guid>https://blog.nobugware.com/post/2008/12/04/python-30-out/</guid><description>Python 3.0 is here.
Guido and others released Python 3.0, a major &amp;ldquo;backward&amp;rdquo; incompatible python release.
It was a necessary choice to remove many old libraries, rework the std library, and change some behaviour.
You can see it all in What&amp;rsquo;s new in Python 3.0.
The most visible change is maybe the print statement, print is now a function:
print &amp;ldquo;toto&amp;rdquo;
becomes
print(&amp;quot;toto&amp;quot;) The % operator whis is supplented by the format() method:</description></item></channel></rss>