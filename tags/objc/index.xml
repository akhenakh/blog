<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>objc on Fabrice Aneche</title><link>https://blog.nobugware.com/tags/objc/</link><description>Recent content in objc on Fabrice Aneche</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 15 Oct 2021 04:00:00 +0000</lastBuildDate><atom:link href="https://blog.nobugware.com/tags/objc/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Go on iOS in 2021</title><link>https://blog.nobugware.com/post/2021/using-go-on-ios-in-2021/</link><pubDate>Fri, 15 Oct 2021 04:00:00 +0000</pubDate><guid>https://blog.nobugware.com/post/2021/using-go-on-ios-in-2021/</guid><description>I&amp;rsquo;ve already posted about gomobile on this blog: &amp;ldquo;Using gomobile for real&amp;rdquo;.
For a lot of people it seems crazy to run Go on iOS and Android for some others it&amp;rsquo;s just routine, Zenly &amp;amp; Tailscale to name a few.
Since I&amp;rsquo;m reviving the idea for a geo database on iPhone here are some details.
I&amp;rsquo;ve started to port spatialite with the required dependencies to realize most of them were LGPL and incompatible with iOS distribution, so I went back to a simple solution using Go to display points on a map from a local database.</description></item><item><title>Appcode shortcuts</title><link>https://blog.nobugware.com/post/2012/10/16/appcode-shortcuts/</link><pubDate>Tue, 16 Oct 2012 09:56:41 -0400</pubDate><guid>https://blog.nobugware.com/post/2012/10/16/appcode-shortcuts/</guid><description>^ up and ^ down : navigate methods
⇧ ⌘ up and ⇧ ⌘ down : switch from .h to .m
⇧ ⌘ ⌫ : go to last edit
⇧ esc : hide console/bottom view
⌥ ⌘ L : reindent code (^ i in xcode)
^ r : Run (⌘ + r in xcode)
^ tab : navigate files
⌘ o : open class
⌘ ⇧ o : open files</description></item></channel></rss>